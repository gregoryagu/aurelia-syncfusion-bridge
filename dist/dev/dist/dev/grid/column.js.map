{"version":3,"sources":["grid/column.js"],"names":["constants","generateBindables","inlineView","customElement","children","Util","Column","aureliaTemplateString","elementPrefix","setTemplates","template","util","getBindablePropertyName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,oBAAAA,S;;AACAC,uB,qBAAAA,iB;;AACAC,gB,iBAAAA,U;AAAYC,mB,iBAAAA,a;AAAeC,c,iBAAAA,Q;;AAC3BC,U,eAAAA,I;;;wBAOKC,M,WALZJ,gBAAcF,UAAUO,qBAAxB,C,UACAJ,cAAiBH,UAAUQ,aAA3B,Y,UAEAP,kBAAkB,SAAlB,EAA6B,CAAC,UAAD,EAAa,cAAb,EAA6B,gBAA7B,EAA+C,eAA/C,EAAgE,cAAhE,EAAgF,eAAhF,EAAiG,UAAjG,EAA6G,UAA7G,EAAyH,UAAzH,EAAqI,UAArI,EAAiJ,kBAAjJ,EAAqK,YAArK,EAAmL,cAAnL,EAAmM,mBAAnM,EAAwN,mBAAxN,EAA6O,YAA7O,EAA2P,cAA3P,EAA2Q,UAA3Q,EAAuR,qBAAvR,EAA8S,OAA9S,EAAuT,mBAAvT,EAA4U,YAA5U,EAA0V,iBAA1V,EAA6W,iBAA7W,EAAgY,QAAhY,EAA0Y,kBAA1Y,EAA8Z,YAA9Z,EAA4a,iBAA5a,EAA+b,eAA/b,EAAgd,UAAhd,EAA4d,YAA5d,EAA0e,cAA1e,EAA0f,UAA1f,EAAsgB,qBAAtgB,EAA6hB,UAA7hB,EAAyiB,WAAziB,EAAsjB,SAAtjB,EAAikB,MAAjkB,EAAykB,iBAAzkB,EAA4lB,SAA5lB,EAAumB,OAAvmB,CAA7B,EAA8oB,EAA9oB,EAAkpB,EAAC,oBAAoB,CAAC,kBAAD,EAAqB,kBAArB,CAArB,EAAlpB,C,UAGEG,SAAYJ,UAAUQ,aAAtB,c;;;;;;;yBACDC,Y,2BAAe;AACb,cAAI,KAAKC,QAAL,CAAc,CAAd,CAAJ,EAAsB;AACpB,gBAAIC,OAAO,IAAIN,IAAJ,EAAX;AACA,iBAAKM,KAAKC,uBAAL,CAA6B,UAA7B,CAAL,IAAiD,KAAKF,QAAL,CAAc,CAAd,EAAiBA,QAAlE;AACD;AACF,S;;;;;;iBAN0D,E","file":"../../../grid/column.js","sourcesContent":["import {constants} from '../common/constants';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {inlineView, customElement, children} from '../common/common';\r\nimport {Util} from '../common/util';\r\n\r\n@inlineView(`${constants.aureliaTemplateString}`)\r\n@customElement(`${constants.elementPrefix}column`)\r\n\r\n@generateBindables('columns', ['clipMode', 'allowEditing', 'allowFiltering', 'allowGrouping', 'allowSorting', 'allowResizing', 'commands', 'commands', 'commands', 'cssClass', 'customAttributes', 'dataSource', 'defaultValue', 'disableHtmlEncode', 'displayAsCheckbox', 'editParams', 'editTemplate', 'editType', 'enableGroupByFormat', 'field', 'filterBarTemplate', 'filterType', 'foreignKeyField', 'foreignKeyValue', 'format', 'headerTemplateID', 'headerText', 'headerTextAlign', 'headerTooltip', 'isFrozen', 'isIdentity', 'isPrimaryKey', 'priority', 'showInColumnChooser', 'template', 'textAlign', 'tooltip', 'type', 'validationRules', 'visible', 'width'], [], {'headerTemplateID': ['headerTemplateId', 'headerTemplateID']})\r\n\r\nexport class Column {\r\n  @children(`${constants.elementPrefix}template`) template = [];\r\n  setTemplates() {\r\n    if (this.template[0]) {\r\n      let util = new Util();\r\n      this[util.getBindablePropertyName('template')] = this.template[0].template;\r\n    }\r\n  }\r\n}\r\n\r\n"]}